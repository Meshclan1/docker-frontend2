# .dev indicates Dockerfile is only to be used in 'development'. 'Dockerfile or Dockerfile.prod' to indicate 'production' mode


# Specify a base image
FROM node:16-alpine

# workdir is /app directory to avoid any conflicts
WORKDIR '/app'

# For the "COPY" command, this copies everything in package.json to the current working directory '.' the first line is where we copy evertyhing, the second is where we copy everything into!

COPY package.json .

# Install all the dependencies of package.json
RUN npm install

# copy command here COPIES everything else from our app and copies it into our set working directory which is a temporary container created during the image building process
COPY . .


# Default commands
CMD ["npm", "run", "start"]


# anytime we use 'docker build', it looks for  file called Dockerfile in our directory. We must therefore tweek our terminal command

# docker build -f Dockerfile.dev .


# Long form
# docker run -p 4000:3000 -v /app/node_modules -v "$(pwd):/app" (image id)
# 21f71886e867531560e6e21d49f9


# Short form
